{"version":3,"sources":["widgets/StocksList/StocksList.tsx","api/TinkoffTradingApi.ts","layouts/MainLayout.tsx","views/MainView/MainView.tsx","views/StocksDetailsView/StockDetailsView.tsx","App.tsx","index.tsx"],"names":["StocksListComponent","props","className","loading","stocks","dataSource","renderItem","stock","Item","onClick","onSelect","handleListItemClick","key","symbol","isin","Meta","avatar","src","title","showName","description","ticker","price","value","currency","RequestMethod","TinkoffTradingApi","client","this","axios","create","baseURL","tickers","requestMethod","GetStocks","country","orderType","sortType","stocksList","values","GetStock","dateTo","Date","dateFrom","subDays","GetCandles","from","formatISO","to","resolution","candles","method","params","post","response","payload","data","Error","message","MainLayoutComponent","titleSkeleton","onBack","subTitle","subtitle","children","tradingApi","MainViewComponent","history","useHistory","useState","setStocks","useEffect","a","getStocks","console","warn","updateStocks","push","StockDetailsViewComponent","useParams","tickerRef","useRef","setStock","setCandles","current","getStock","getCandles","updateStock","candlesChart","labels","map","candle","format","fromUnixTime","date","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","c","options","scales","yAxes","ticks","display","width","height","goBack","AppComponent","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.144f5185.chunk.js","sourcesContent":["import React from \"react\";\nimport { List, Avatar } from \"antd\";\nimport { Stock } from \"../../models/tinkoffTrading\";\nimport \"./StocksList.css\";\n\nexport type SelectEventHandler = (stock: Stock) => void;\n\nexport interface StocksListProps {\n  stocks: Stock[] | undefined;\n  onSelect?: SelectEventHandler;\n}\n\nexport default function StocksListComponent(props: StocksListProps) {\n  const handleListItemClick = (stock: Stock) => {\n    props.onSelect?.(stock);\n  };\n\n  const renderListItem = (stock: Stock): JSX.Element => {\n    return (\n      <List.Item\n        onClick={() => handleListItemClick(stock)}\n        className={`item`}\n        key={stock.symbol.isin}\n      >\n        <List.Item.Meta\n          avatar={\n            <Avatar\n              src={`https://static.tinkoff.ru/brands/traiding/${stock.symbol.isin}x160.png`}\n            />\n          }\n          title={stock.symbol.showName}\n          description={stock.symbol.ticker}\n        />\n        <div>\n          {stock.price.value} {stock.price.currency}\n        </div>\n      </List.Item>\n    );\n  };\n\n  return (\n    <List\n      className=\"stocks-list\"\n      loading={!props.stocks}\n      dataSource={props.stocks || []}\n      renderItem={renderListItem}\n    />\n  );\n}\n","import axios, { AxiosInstance, AxiosResponse } from \"axios\";\nimport { Stock, Response, StocksList, Candle, CandlesList } from \"../models/tinkoffTrading\";\nimport { subDays, formatISO } from \"date-fns\";\n\nconst BASE_URL = \"https://api.tinkoff.ru/trading\";\n\nexport enum RequestMethod {\n  GetStocks = \"stocks/list\",\n  GetStock = \"stocks/get\",\n  GetCandles = \"symbols/candles\",\n}\n\nexport default class TinkoffTradingApi {\n  private client!: AxiosInstance;\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: BASE_URL,\n    });\n  }\n\n  async getStocks(tickers: string[]): Promise<Stock[]> {\n    const stocksList = await this.requestMethod<StocksList>(\n      RequestMethod.GetStocks,\n      {\n        tickers,\n        country: \"All\",\n        orderType: \"Desc\",\n        sortType: \"ByPrice\",\n      }\n    );\n\n    return stocksList.values;\n  }\n\n  async getStock(ticker: string): Promise<Stock> {\n    return this.requestMethod(RequestMethod.GetStock, { ticker });\n  }\n\n  async getCandles(ticker: string): Promise<Candle[]> {\n    const dateTo = new Date();\n    const dateFrom = subDays(dateTo, 1);\n\n    const candles = await this.requestMethod<CandlesList>(RequestMethod.GetCandles, {\n      from: formatISO(dateFrom),\n      to: formatISO(dateTo),\n      resolution: 5,\n      ticker,\n    });\n\n    return candles.candles;\n  }\n\n  private async requestMethod<T>(\n    method: RequestMethod,\n    params: any\n  ): Promise<T> {\n    const response: AxiosResponse<Response<T>> = await this.client.post(\n      method,\n      params\n    );\n\n    const payload = response.data.payload;\n\n    if (\"code\" in payload && \"message\" in payload) {\n      throw new Error(payload.message);\n    }\n\n    return payload;\n  }\n}\n","import React, { PropsWithChildren } from \"react\";\nimport { PageHeader } from \"antd\";\nimport \"./MainLayout.css\";\n\nexport interface MainLayoutProps {\n  title?: string;\n  subtitle?: string;\n  onBack?: () => void;\n}\n\nexport default function MainLayoutComponent(\n  props: PropsWithChildren<MainLayoutProps>\n) {\n  const titleSkeleton = <div className=\"title-skeleton\" />;\n\n  return (\n    <div className=\"main-layout\">\n      <PageHeader\n        className=\"header\"\n        onBack={props.onBack}\n        title={props.title || titleSkeleton}\n        subTitle={props.subtitle}\n      />\n      <div className=\"body\">{props.children}</div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Stock } from \"../../models/tinkoffTrading\";\nimport StocksListComponent from \"../../widgets/StocksList/StocksList\";\nimport \"./MainView.css\";\nimport { useHistory } from \"react-router-dom\";\nimport TinkoffTradingApi from \"../../api/TinkoffTradingApi\";\nimport MainLayoutComponent from \"../../layouts/MainLayout\";\n\nconst tradingApi = new TinkoffTradingApi();\n\nexport default function MainViewComponent() {\n  const history = useHistory();\n\n  const [stocks, setStocks] = useState<Stock[]>();\n\n  useEffect(() => {\n    const updateStocks = async (): Promise<void> => {\n      try {\n        setStocks(await tradingApi.getStocks([\"GOOGL\", \"MSFT\", \"AAPL\"]));\n      } catch (e) {\n        console.warn(e.message);\n      }\n    };\n\n    updateStocks();\n  }, []);\n\n  const handleStockSelect = (stock: Stock) => {\n    history.push(`/stock-details/${stock.symbol.ticker}`);\n  };\n\n  return (\n    <MainLayoutComponent title=\"Stocks view\">\n      <div className=\"main-view\">\n        <StocksListComponent stocks={stocks} onSelect={handleStockSelect} />\n      </div>\n    </MainLayoutComponent>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport \"./StockDetailsView.css\";\nimport { Stock, Candle } from \"../../models/tinkoffTrading\";\nimport TinkoffTradingApi from \"../../api/TinkoffTradingApi\";\nimport MainLayoutComponent from \"../../layouts/MainLayout\";\nimport { Line } from \"react-chartjs-2\";\nimport { format, fromUnixTime } from \"date-fns\";\n\nconst tradingApi = new TinkoffTradingApi();\n\nexport interface StockDetailsViewRouteParams {\n  ticker: string;\n}\n\nexport default function StockDetailsViewComponent() {\n  const history = useHistory();\n  const params = useParams<StockDetailsViewRouteParams>();\n  const tickerRef = useRef<string>();\n  const [stock, setStock] = useState<Stock>();\n  const [candles, setCandles] = useState<Candle[]>();\n\n  useEffect(() => {\n    tickerRef.current = params.ticker;\n  });\n\n  useEffect(() => {\n    const updateStock = async () => {\n      const ticker = tickerRef.current;\n\n      if (!ticker) return;\n\n      try {\n        setStock(await tradingApi.getStock(ticker));\n        setCandles(await tradingApi.getCandles(ticker));\n      } catch (e) {\n        console.warn(e.message);\n      }\n    };\n\n    updateStock();\n  }, [tickerRef]);\n\n  const getChartData = () => ({\n    labels:\n      candles?.map((candle) =>\n        format(fromUnixTime(candle.date), \"HH:mm MM/dd\")\n      ) || [],\n    datasets: [\n      {\n        label: \"Candles\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: candles?.map((candle) => candle.c) || [],\n      },\n    ],\n  });\n\n  const chartOptions = {\n    scales: {\n      // xAxes: [\n      //   {\n      //     ticks: {\n      //       display: false,\n      //     },\n      //   },\n      // ],\n      yAxes: [\n        {\n          ticks: {\n            display: false,\n          },\n        },\n      ],\n    },\n  };\n\n  const candlesChart = (\n    <div className=\"chart-container\">\n      <Line data={getChartData()} options={chartOptions} width={4000} height={400} />\n    </div>\n  );\n\n  return (\n    <MainLayoutComponent\n      title={stock?.symbol.showName}\n      subtitle={stock?.symbol.ticker}\n      onBack={() => history.goBack()}\n    >\n      <div className=\"stock-details-view\">{candles && candlesChart}</div>\n    </MainLayoutComponent>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport MainViewComponent from \"./views/MainView/MainView\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport StockDetailsViewComponent from \"./views/StocksDetailsView/StockDetailsView\";\n\nexport function AppComponent() {\n  return (\n    <Router>\n      <div className=\"stocks-view-app\">\n        <Switch>\n          <Route exact path=\"/\" component={MainViewComponent} />\n          <Route\n            path=\"/stock-details/:ticker\"\n            component={StockDetailsViewComponent}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppComponent } from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}